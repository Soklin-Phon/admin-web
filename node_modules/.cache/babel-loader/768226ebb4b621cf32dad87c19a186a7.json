{"ast":null,"code":"import _slicedToArray from \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/src/app/MatxLayout/SharedCompoents/NotificationBar.jsx\";\nimport React from \"react\";\nimport { Icon, Badge, Card, Button, IconButton, Drawer } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport { getTimeDifference } from \"utils.js\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getNotification, deleteAllNotification, deleteNotification } from \"../../redux/actions/NotificationActions\";\n\nvar NotificationBar = function NotificationBar(props) {\n  var container = props.container,\n      theme = props.theme,\n      settings = props.settings,\n      _props$notification = props.notification,\n      notifcationList = _props$notification === void 0 ? [] : _props$notification,\n      getNotification = props.getNotification,\n      deleteAllNotification = props.deleteAllNotification,\n      deleteNotification = props.deleteNotification;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      panelOpen = _React$useState2[0],\n      setPanelOpen = _React$useState2[1];\n\n  function handleDrawerToggle() {\n    if (!panelOpen) {\n      getNotification();\n    }\n\n    setPanelOpen(!panelOpen);\n  }\n\n  var parentThemePalette = theme.palette;\n  return React.createElement(ThemeProvider, {\n    theme: settings.themes[settings.activeTheme],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleDrawerToggle,\n    style: {\n      color: parentThemePalette.type === \"light\" ? parentThemePalette.text.secondary : parentThemePalette.text.primary\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Badge, {\n    color: \"secondary\",\n    badgeContent: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"notifications\"))), React.createElement(Drawer, {\n    width: \"100px\",\n    container: container,\n    variant: \"temporary\",\n    anchor: \"right\",\n    open: panelOpen,\n    onClose: handleDrawerToggle,\n    ModalProps: {\n      keepMounted: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"notification\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"notification__topbar flex items-center p-4 mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"notifications\"), React.createElement(\"h5\", {\n    className: \"ml-2 my-0 font-medium\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Notifications\")), notifcationList.map(function (notification) {\n    return React.createElement(\"div\", {\n      key: notification.id,\n      className: \"notification__card position-relative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      size: \"small\",\n      className: \"delete-button bg-light-gray mr-6\",\n      onClick: function onClick() {\n        return deleteNotification(notification.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: \"text-muted\",\n      fontSize: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"clear\")), React.createElement(Link, {\n      to: \"/\".concat(notification.path),\n      onClick: handleDrawerToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: \"mx-4 mb-6\",\n      elevation: 3,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card__topbar flex items-center justify-between p-2 bg-light-gray\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flex items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card__topbar__button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      className: \"card__topbar__icon\",\n      fontSize: \"small\",\n      color: notification.icon.color,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, notification.icon.name)), React.createElement(\"span\", {\n      className: \"ml-4 font-medium text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, notification.heading)), React.createElement(\"small\", {\n      className: \"card__topbar__time text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, getTimeDifference(new Date(notification.timestamp)), \" ago\")), React.createElement(\"div\", {\n      className: \"px-4 pt-2 pb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, notification.title), React.createElement(\"small\", {\n      className: \"text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, notification.subtitle)))));\n  }), React.createElement(\"div\", {\n    className: \"text-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: deleteAllNotification,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Clear Notifications\")))));\n};\n\nNotificationBar.propTypes = {\n  settings: PropTypes.object.isRequired,\n  notification: PropTypes.array.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    getNotification: PropTypes.func.isRequired,\n    deleteNotification: PropTypes.func.isRequired,\n    deleteAllNotification: PropTypes.func.isRequired,\n    notification: state.notification,\n    settings: state.layout.settings\n  };\n};\n\nexport default withStyles({}, {\n  withTheme: true\n})(connect(mapStateToProps, {\n  getNotification: getNotification,\n  deleteNotification: deleteNotification,\n  deleteAllNotification: deleteAllNotification\n})(NotificationBar));","map":{"version":3,"sources":["/home/soklin/Project/MIS/Dev-MIS/front-end/mis/src/app/MatxLayout/SharedCompoents/NotificationBar.jsx"],"names":["React","Icon","Badge","Card","Button","IconButton","Drawer","Link","withStyles","ThemeProvider","getTimeDifference","PropTypes","connect","getNotification","deleteAllNotification","deleteNotification","NotificationBar","props","container","theme","settings","notification","notifcationList","useState","panelOpen","setPanelOpen","handleDrawerToggle","parentThemePalette","palette","themes","activeTheme","color","type","text","secondary","primary","keepMounted","map","id","path","icon","name","heading","Date","timestamp","title","subtitle","propTypes","object","isRequired","array","mapStateToProps","state","func","layout","withTheme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Icon,\n  Badge,\n  Card,\n  Button,\n  IconButton,\n  Drawer\n} from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport { withStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport { getTimeDifference } from \"utils.js\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getNotification,\n  deleteAllNotification,\n  deleteNotification\n} from \"../../redux/actions/NotificationActions\";\n\nconst NotificationBar = props => {\n  const {\n    container,\n    theme,\n    settings,\n    notification: notifcationList = [],\n    getNotification,\n    deleteAllNotification,\n    deleteNotification\n  } = props;\n\n  const [panelOpen, setPanelOpen] = React.useState(false);\n\n  function handleDrawerToggle() {\n    if (!panelOpen) {\n      getNotification();\n    }\n    setPanelOpen(!panelOpen);\n  }\n  const parentThemePalette = theme.palette;\n\n  return (\n    <ThemeProvider theme={settings.themes[settings.activeTheme]}>\n      <IconButton\n        onClick={handleDrawerToggle}\n        style={{\n          color:\n            parentThemePalette.type === \"light\"\n              ? parentThemePalette.text.secondary\n              : parentThemePalette.text.primary\n        }}\n      >\n        <Badge color=\"secondary\" badgeContent={0}>\n          <Icon>notifications</Icon>\n        </Badge>\n      </IconButton>\n\n      <Drawer\n        width={\"100px\"}\n        container={container}\n        variant=\"temporary\"\n        anchor={\"right\"}\n        open={panelOpen}\n        onClose={handleDrawerToggle}\n        ModalProps={{\n          keepMounted: true\n        }}\n      >\n        <div className=\"notification\">\n          <div className=\"notification__topbar flex items-center p-4 mb-4\">\n            <Icon color=\"primary\">notifications</Icon>\n            <h5 className=\"ml-2 my-0 font-medium\">Notifications</h5>\n          </div>\n\n          {notifcationList.map(notification => (\n            <div\n              key={notification.id}\n              className=\"notification__card position-relative\"\n            >\n              <IconButton\n                size=\"small\"\n                className=\"delete-button bg-light-gray mr-6\"\n                onClick={() => deleteNotification(notification.id)}\n              >\n                <Icon className=\"text-muted\" fontSize=\"small\">\n                  clear\n                </Icon>\n              </IconButton>\n              <Link to={`/${notification.path}`} onClick={handleDrawerToggle}>\n                <Card className=\"mx-4 mb-6\" elevation={3}>\n                  <div className=\"card__topbar flex items-center justify-between p-2 bg-light-gray\">\n                    <div className=\"flex items-center\">\n                      <div className=\"card__topbar__button\">\n                        <Icon\n                          className=\"card__topbar__icon\"\n                          fontSize=\"small\"\n                          color={notification.icon.color}\n                        >\n                          {notification.icon.name}\n                        </Icon>\n                      </div>\n                      <span className=\"ml-4 font-medium text-muted\">\n                        {notification.heading}\n                      </span>\n                    </div>\n                    <small className=\"card__topbar__time text-muted\">\n                      {getTimeDifference(new Date(notification.timestamp))} ago\n                    </small>\n                  </div>\n                  <div className=\"px-4 pt-2 pb-4\">\n                    <p className=\"m-0\">{notification.title}</p>\n                    <small className=\"text-muted\">\n                      {notification.subtitle}\n                    </small>\n                  </div>\n                </Card>\n              </Link>\n            </div>\n          ))}\n\n          <div className=\"text-center\">\n            <Button onClick={deleteAllNotification}>Clear Notifications</Button>\n          </div>\n        </div>\n      </Drawer>\n    </ThemeProvider>\n  );\n};\n\nNotificationBar.propTypes = {\n  settings: PropTypes.object.isRequired,\n  notification: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  getNotification: PropTypes.func.isRequired,\n  deleteNotification: PropTypes.func.isRequired,\n  deleteAllNotification: PropTypes.func.isRequired,\n  notification: state.notification,\n  settings: state.layout.settings\n});\n\nexport default withStyles(\n  {},\n  { withTheme: true }\n)(\n  connect(mapStateToProps, {\n    getNotification,\n    deleteNotification,\n    deleteAllNotification\n  })(NotificationBar)\n);\n"]},"metadata":{},"sourceType":"module"}