{"ast":null,"code":"import _toConsumableArray from \"/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nexport var SET_USER_NAVIGATION = \"SET_USER_NAVIGATION\";\n\nvar getfilteredNavigations = function getfilteredNavigations() {\n  var navList = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var role = arguments.length > 1 ? arguments[1] : undefined;\n  return navList.reduce(function (array, nav) {\n    if (nav.auth) {\n      if (nav.auth.includes(role)) {\n        array.push(nav);\n      }\n    } else {\n      if (nav.children) {\n        nav.children = getfilteredNavigations(nav.children, role);\n        array.push(nav);\n      } else {\n        array.push(nav);\n      }\n    }\n\n    return array;\n  }, []);\n};\n\nexport function getNavigationByUser() {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        user = _getState.user,\n        _getState$navigations = _getState.navigations,\n        navigations = _getState$navigations === void 0 ? [] : _getState$navigations;\n\n    var filteredNavigations = getfilteredNavigations(navigations, user.role);\n    dispatch({\n      type: SET_USER_NAVIGATION,\n      payload: _toConsumableArray(filteredNavigations)\n    });\n  };\n}","map":{"version":3,"sources":["/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/src/app/redux/actions/NavigationAction.js"],"names":["SET_USER_NAVIGATION","getfilteredNavigations","navList","role","reduce","array","nav","auth","includes","push","children","getNavigationByUser","dispatch","getState","user","navigations","filteredNavigations","type","payload"],"mappings":";AAAA,OAAO,IAAMA,mBAAmB,GAAG,qBAA5B;;AAEP,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAwB;AAAA,MAAvBC,OAAuB,uEAAb,EAAa;AAAA,MAATC,IAAS;AACrD,SAAOD,OAAO,CAACE,MAAR,CAAe,UAACC,KAAD,EAAQC,GAAR,EAAgB;AACpC,QAAIA,GAAG,CAACC,IAAR,EAAc;AACZ,UAAID,GAAG,CAACC,IAAJ,CAASC,QAAT,CAAkBL,IAAlB,CAAJ,EAA6B;AAC3BE,QAAAA,KAAK,CAACI,IAAN,CAAWH,GAAX;AACD;AACF,KAJD,MAIO;AACL,UAAIA,GAAG,CAACI,QAAR,EAAkB;AAChBJ,QAAAA,GAAG,CAACI,QAAJ,GAAeT,sBAAsB,CAACK,GAAG,CAACI,QAAL,EAAeP,IAAf,CAArC;AACAE,QAAAA,KAAK,CAACI,IAAN,CAAWH,GAAX;AACD,OAHD,MAGO;AACLD,QAAAA,KAAK,CAACI,IAAN,CAAWH,GAAX;AACD;AACF;;AACD,WAAOD,KAAP;AACD,GAdM,EAcJ,EAdI,CAAP;AAeD,CAhBD;;AAkBA,OAAO,SAASM,mBAAT,GAA+B;AACpC,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,oBACIA,QAAQ,EADZ;AAAA,QACvBC,IADuB,aACvBA,IADuB;AAAA,0CACjBC,WADiB;AAAA,QACjBA,WADiB,sCACH,EADG;;AAG7B,QAAIC,mBAAmB,GAAGf,sBAAsB,CAACc,WAAD,EAAcD,IAAI,CAACX,IAAnB,CAAhD;AAEAS,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEjB,mBADC;AAEPkB,MAAAA,OAAO,qBAAMF,mBAAN;AAFA,KAAD,CAAR;AAID,GATD;AAUD","sourcesContent":["export const SET_USER_NAVIGATION = \"SET_USER_NAVIGATION\";\n\nconst getfilteredNavigations = (navList = [], role) => {\n  return navList.reduce((array, nav) => {\n    if (nav.auth) {\n      if (nav.auth.includes(role)) {\n        array.push(nav);\n      }\n    } else {\n      if (nav.children) {\n        nav.children = getfilteredNavigations(nav.children, role);\n        array.push(nav);\n      } else {\n        array.push(nav);\n      }\n    }\n    return array;\n  }, []);\n};\n\nexport function getNavigationByUser() {\n  return (dispatch, getState) => {\n    let { user, navigations = [] } = getState();\n\n    let filteredNavigations = getfilteredNavigations(navigations, user.role);\n\n    dispatch({\n      type: SET_USER_NAVIGATION,\n      payload: [...filteredNavigations]\n    });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}