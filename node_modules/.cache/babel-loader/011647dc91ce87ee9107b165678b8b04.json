{"ast":null,"code":"import _slicedToArray from \"/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/src/app/auth/AuthGuard.jsx\";\nimport React, { Fragment, useState, useEffect, useContext } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport AppContext from \"app/appContext\";\n\nvar redirectRoute = function redirectRoute(props) {\n  var location = props.location,\n      history = props.history;\n  var pathname = location.pathname;\n  history.push({\n    pathname: \"/session/signin\",\n    state: {\n      redirectUrl: pathname\n    }\n  });\n};\n\nvar getAuthStatus = function getAuthStatus(props, routes) {\n  var location = props.location,\n      user = props.user;\n  var pathname = location.pathname;\n  var matched = routes.find(function (r) {\n    return r.path === pathname;\n  });\n  var authenticated = matched && matched.auth && matched.auth.length ? matched.auth.includes(user.role) : true;\n  return authenticated;\n};\n\nvar AuthGuard = function AuthGuard(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _useContext = useContext(AppContext),\n      routes = _useContext.routes;\n\n  var _useState = useState(getAuthStatus(props, routes)),\n      _useState2 = _slicedToArray(_useState, 2),\n      authenticated = _useState2[0],\n      setAuthenticated = _useState2[1];\n\n  useEffect(function () {\n    if (!authenticated) {\n      redirectRoute(props);\n    }\n\n    setAuthenticated(getAuthStatus(props, routes));\n  }, [setAuthenticated, authenticated, routes, props]);\n  return authenticated ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, children) : null;\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(AuthGuard));","map":{"version":3,"sources":["/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/src/app/auth/AuthGuard.jsx"],"names":["React","Fragment","useState","useEffect","useContext","withRouter","connect","AppContext","redirectRoute","props","location","history","pathname","push","state","redirectUrl","getAuthStatus","routes","user","matched","find","r","path","authenticated","auth","length","includes","role","AuthGuard","children","setAuthenticated","mapStateToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,EAA+CC,UAA/C,QAAiE,OAAjE;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAAA,MACrBC,QADqB,GACCD,KADD,CACrBC,QADqB;AAAA,MACXC,OADW,GACCF,KADD,CACXE,OADW;AAAA,MAErBC,QAFqB,GAERF,QAFQ,CAErBE,QAFqB;AAI7BD,EAAAA,OAAO,CAACE,IAAR,CAAa;AACXD,IAAAA,QAAQ,EAAE,iBADC;AAEXE,IAAAA,KAAK,EAAE;AAAEC,MAAAA,WAAW,EAAEH;AAAf;AAFI,GAAb;AAID,CARD;;AAUA,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,CAACP,KAAD,EAAQQ,MAAR,EAAmB;AAAA,MAC/BP,QAD+B,GACZD,KADY,CAC/BC,QAD+B;AAAA,MACrBQ,IADqB,GACZT,KADY,CACrBS,IADqB;AAAA,MAE/BN,QAF+B,GAElBF,QAFkB,CAE/BE,QAF+B;AAGvC,MAAMO,OAAO,GAAGF,MAAM,CAACG,IAAP,CAAY,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,KAAWV,QAAf;AAAA,GAAb,CAAhB;AACA,MAAMW,aAAa,GACjBJ,OAAO,IAAIA,OAAO,CAACK,IAAnB,IAA2BL,OAAO,CAACK,IAAR,CAAaC,MAAxC,GACIN,OAAO,CAACK,IAAR,CAAaE,QAAb,CAAsBR,IAAI,CAACS,IAA3B,CADJ,GAEI,IAHN;AAKA,SAAOJ,aAAP;AACD,CAVD;;AAYA,IAAMK,SAAS,GAAG,SAAZA,SAAY,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAZpB,KAAY;;AAAA,oBACzBL,UAAU,CAACG,UAAD,CADe;AAAA,MACpCU,MADoC,eACpCA,MADoC;;AAAA,kBAGJf,QAAQ,CAC9Cc,aAAa,CAACP,KAAD,EAAQQ,MAAR,CADiC,CAHJ;AAAA;AAAA,MAGvCM,aAHuC;AAAA,MAGxBO,gBAHwB;;AAO5C3B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACoB,aAAL,EAAoB;AAClBf,MAAAA,aAAa,CAACC,KAAD,CAAb;AACD;;AACDqB,IAAAA,gBAAgB,CAACd,aAAa,CAACP,KAAD,EAAQQ,MAAR,CAAd,CAAhB;AACD,GALQ,EAKN,CAACa,gBAAD,EAAmBP,aAAnB,EAAkCN,MAAlC,EAA0CR,KAA1C,CALM,CAAT;AAOA,SAAOc,aAAa,GAAG,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWM,QAAX,CAAH,GAAqC,IAAzD;AACD,CAfD;;AAiBA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAjB,KAAK;AAAA,SAAK;AAChCI,IAAAA,IAAI,EAAEJ,KAAK,CAACI;AADoB,GAAL;AAAA,CAA7B;;AAIA,eAAeb,UAAU,CAACC,OAAO,CAACyB,eAAD,CAAP,CAAyBH,SAAzB,CAAD,CAAzB","sourcesContent":["import React, { Fragment, useState, useEffect, useContext } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport AppContext from \"app/appContext\";\n\nconst redirectRoute = props => {\n  const { location, history } = props;\n  const { pathname } = location;\n\n  history.push({\n    pathname: \"/session/signin\",\n    state: { redirectUrl: pathname }\n  });\n};\n\nconst getAuthStatus = (props, routes) => {\n  const { location, user } = props;\n  const { pathname } = location;\n  const matched = routes.find(r => r.path === pathname);\n  const authenticated =\n    matched && matched.auth && matched.auth.length\n      ? matched.auth.includes(user.role)\n      : true;\n\n  return authenticated;\n};\n\nconst AuthGuard = ({ children, ...props }) => {\n  const { routes } = useContext(AppContext);\n\n  let [authenticated, setAuthenticated] = useState(\n    getAuthStatus(props, routes)\n  );\n\n  useEffect(() => {\n    if (!authenticated) {\n      redirectRoute(props);\n    }\n    setAuthenticated(getAuthStatus(props, routes));\n  }, [setAuthenticated, authenticated, routes, props]);\n\n  return authenticated ? <Fragment>{children}</Fragment> : null;\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default withRouter(connect(mapStateToProps)(AuthGuard));\n"]},"metadata":{},"sourceType":"module"}