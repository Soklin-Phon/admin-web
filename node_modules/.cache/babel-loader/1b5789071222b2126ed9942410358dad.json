{"ast":null,"code":"import _classCallCheck from \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/src/matx/components/MatxVerticalNav/MatxVerticalNavExpansionPanel.jsx\";\nimport React, { Component } from \"react\";\nimport { Icon } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TouchRipple from \"@material-ui/core/ButtonBase\";\nimport { withRouter } from \"react-router-dom\";\nimport { classList } from \"utils\";\n\nvar styles = function styles(theme) {\n  return {\n    expandIcon: {\n      transition: \"transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms\",\n      transform: \"rotate(90deg)\" // marginRight: \"16px\"\n\n    },\n    collapseIcon: {\n      transition: \"transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms\",\n      transform: \"rotate(0deg)\" // marginRight: \"16px\"\n\n    },\n    \"expansion-panel\": {\n      overflow: \"hidden\",\n      transition: \"max-height 0.3s cubic-bezier(0, 0, 0.2, 1)\"\n    },\n    highlight: {\n      background: theme.palette.primary.main\n    }\n  };\n};\n\nvar MatxVerticalNavExpansionPanel = /*#__PURE__*/function (_Component) {\n  _inherits(MatxVerticalNavExpansionPanel, _Component);\n\n  function MatxVerticalNavExpansionPanel() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MatxVerticalNavExpansionPanel);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MatxVerticalNavExpansionPanel)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      collapsed: true\n    };\n    _this.elementRef = React.createRef();\n    _this.componentHeight = 0;\n\n    _this.handleClick = function () {\n      _this.setState({\n        collapsed: !_this.state.collapsed\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(MatxVerticalNavExpansionPanel, [{\n    key: \"calcaulateHeight\",\n    value: function calcaulateHeight(node) {\n      if (node.name !== \"child\") {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = node.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var child = _step.value;\n            this.calcaulateHeight(child);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      this.componentHeight += node.clientHeight;\n      return;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var location = this.props.location;\n      this.calcaulateHeight(this.elementRef); // OPEN DROPDOWN IF CHILD IS ACTIVE\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.elementRef.children[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var child = _step2.value;\n\n          if (child.getAttribute(\"href\") === location.pathname) {\n            this.setState({\n              collapsed: false\n            });\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var collapsed = this.state.collapsed;\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          children = _this$props.children;\n      var _this$props$item = this.props.item,\n          name = _this$props$item.name,\n          icon = _this$props$item.icon,\n          iconText = _this$props$item.iconText,\n          badge = _this$props$item.badge;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(TouchRipple, {\n        className: classList({\n          \"nav-item items-center w-full has-submenu\": true,\n          open: !collapsed\n        }),\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, icon && React.createElement(Icon, {\n        className: \"align-middle item-icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, icon), iconText && React.createElement(\"span\", {\n        className: \"item-icon icon-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, iconText), React.createElement(\"span\", {\n        className: \"align-middle item-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, name)), badge && React.createElement(\"div\", {\n        className: \"badge bg-\".concat(badge.color),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, badge.value), React.createElement(\"div\", {\n        className: collapsed ? classes.collapseIcon + \" item-arrow\" : classes.expandIcon + \" item-arrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        className: \"align-middle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"chevron_right\"))), React.createElement(\"div\", {\n        ref: function ref(el) {\n          return _this2.elementRef = el;\n        },\n        className: classes[\"expansion-panel\"] + \" submenu\",\n        style: collapsed ? {\n          maxHeight: \"0px\"\n        } : {\n          maxHeight: this.componentHeight + \"px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, children));\n    }\n  }]);\n\n  return MatxVerticalNavExpansionPanel;\n}(Component);\n\nexport default withRouter(withStyles(styles)(MatxVerticalNavExpansionPanel));","map":{"version":3,"sources":["/home/soklin/Project/MIS/Dev-MIS/front-end/mis/src/matx/components/MatxVerticalNav/MatxVerticalNavExpansionPanel.jsx"],"names":["React","Component","Icon","withStyles","TouchRipple","withRouter","classList","styles","theme","expandIcon","transition","transform","collapseIcon","overflow","highlight","background","palette","primary","main","MatxVerticalNavExpansionPanel","state","collapsed","elementRef","createRef","componentHeight","handleClick","setState","node","name","children","child","calcaulateHeight","clientHeight","location","props","getAttribute","pathname","classes","item","icon","iconText","badge","open","color","value","el","maxHeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Icon } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TouchRipple from \"@material-ui/core/ButtonBase\";\nimport { withRouter } from \"react-router-dom\";\nimport { classList } from \"utils\";\n\nconst styles = theme => {\n  return {\n    expandIcon: {\n      transition: \"transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms\",\n      transform: \"rotate(90deg)\"\n      // marginRight: \"16px\"\n    },\n    collapseIcon: {\n      transition: \"transform 0.3s cubic-bezier(0, 0, 0.2, 1) 0ms\",\n      transform: \"rotate(0deg)\"\n      // marginRight: \"16px\"\n    },\n    \"expansion-panel\": {\n      overflow: \"hidden\",\n      transition: \"max-height 0.3s cubic-bezier(0, 0, 0.2, 1)\"\n    },\n    highlight: {\n      background: theme.palette.primary.main\n    }\n  };\n};\n\nclass MatxVerticalNavExpansionPanel extends Component {\n  state = {\n    collapsed: true\n  };\n  elementRef = React.createRef();\n\n  componentHeight = 0;\n\n  handleClick = () => {\n    this.setState({ collapsed: !this.state.collapsed });\n  };\n\n  calcaulateHeight(node) {\n    if (node.name !== \"child\") {\n      for (let child of node.children) {\n        this.calcaulateHeight(child);\n      }\n    }\n    this.componentHeight += node.clientHeight;\n    return;\n  }\n  componentDidMount() {\n    let { location } = this.props;\n    this.calcaulateHeight(this.elementRef);\n\n    // OPEN DROPDOWN IF CHILD IS ACTIVE\n    for (let child of this.elementRef.children) {\n      if (child.getAttribute(\"href\") === location.pathname) {\n        this.setState({ collapsed: false });\n      }\n    }\n  }\n  render() {\n    let { collapsed } = this.state;\n    let { classes, children } = this.props;\n    let { name, icon, iconText, badge } = this.props.item;\n    return (\n      <div>\n        <TouchRipple\n          className={classList({\n            \"nav-item items-center w-full has-submenu\": true,\n            open: !collapsed\n          })}\n          onClick={this.handleClick}\n        >\n          <div className=\"flex items-center\">\n            {(icon && <Icon className=\"align-middle item-icon\">{icon}</Icon>)}\n            {(iconText && <span className=\"item-icon icon-text\">{iconText}</span>)}\n            <span className=\"align-middle item-text\">{name}</span>\n          </div>\n          {badge && (\n            <div className={`badge bg-${badge.color}`}>{badge.value}</div>\n          )}\n          <div\n            className={\n              collapsed\n                ? classes.collapseIcon + \" item-arrow\"\n                : classes.expandIcon + \" item-arrow\"\n            }\n          >\n            <Icon className=\"align-middle\">chevron_right</Icon>\n          </div>\n        </TouchRipple>\n\n        <div\n          ref={el => (this.elementRef = el)}\n          className={classes[\"expansion-panel\"] + \" submenu\"}\n          style={\n            collapsed\n              ? { maxHeight: \"0px\" }\n              : { maxHeight: this.componentHeight + \"px\" }\n          }\n        >\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(withStyles(styles)(MatxVerticalNavExpansionPanel));\n"]},"metadata":{},"sourceType":"module"}