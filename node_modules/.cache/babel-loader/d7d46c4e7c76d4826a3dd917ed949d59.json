{"ast":null,"code":"import _objectSpread from \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/src/app/main/portal/sessions/SignIn.jsx\";\nimport React, { Component } from \"react\";\nimport { Card, Checkbox, FormControlLabel, Grid, Button, CircularProgress } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginWithEmailAndPassword } from \"../../../redux/actions/LoginActions\";\n\nvar styles = function styles(theme) {\n  return {\n    wrapper: {\n      position: \"relative\"\n    },\n    buttonProgress: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      marginTop: -12,\n      marginLeft: -12\n    }\n  };\n};\n\nvar SignIn = /*#__PURE__*/function (_Component) {\n  _inherits(SignIn, _Component);\n\n  function SignIn() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignIn);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignIn)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: \"phonsoklin670@gmail.com\",\n      password: \"testpass\",\n      agreement: \"\"\n    };\n\n    _this.handleChange = function (event) {\n      event.persist();\n\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      _this.props.loginWithEmailAndPassword(_objectSpread({}, _this.state));\n    };\n\n    return _this;\n  }\n\n  _createClass(SignIn, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: \"signup flex justify-center w-full h-full-screen\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"signup-card position-relative y-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        lg: 5,\n        md: 5,\n        sm: 5,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-8 flex justify-center items-center h-full\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/assets/images/lala.png\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        lg: 7,\n        md: 7,\n        sm: 7,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-9 h-full bg-light-gray position-relative\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(ValidatorForm, {\n        ref: \"form\",\n        onSubmit: this.handleFormSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(TextValidator, {\n        className: \"mb-6 w-full\",\n        variant: \"outlined\",\n        label: \"Email\",\n        onChange: this.handleChange,\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        validators: [\"required\", \"isEmail\"],\n        errorMessages: [\"this field is required\", \"email is not valid\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(TextValidator, {\n        className: \"mb-3 w-full\",\n        label: \"Password\",\n        variant: \"outlined\",\n        onChange: this.handleChange,\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        validators: [\"required\"],\n        errorMessages: [\"this field is required\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"flex flex-wrap items-center mb-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primarys\",\n        disabled: this.props.login.loading,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Sign in\"), this.props.login.loading && React.createElement(CircularProgress, {\n        size: 24,\n        className: classes.buttonProgress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"mr-2 ml-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"or\"), React.createElement(Button, {\n        className: \"capitalize\",\n        onClick: function onClick() {\n          return _this2.props.history.push(\"/session/signup\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Sign up\")), React.createElement(Button, {\n        className: \"text-primary\",\n        onClick: function onClick() {\n          return _this2.props.history.push(\"/session/forgot-password\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Forgot password?\")), React.createElement(FormControlLabel, {\n        className: \"mb-3\",\n        name: \"agreement\",\n        onChange: this.handleChange,\n        control: React.createElement(Checkbox, {\n          checked: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }),\n        label: \"I have read and agree to the terms of service.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return SignIn;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    loginWithEmailAndPassword: PropTypes.func.isRequired,\n    login: state.login\n  };\n};\n\nexport default withStyles(styles, {\n  withTheme: true\n})(withRouter(connect(mapStateToProps, {\n  loginWithEmailAndPassword: loginWithEmailAndPassword\n})(SignIn)));","map":{"version":3,"sources":["/home/soklin/Project/MIS/Dev-MIS/front-end/mis/src/app/main/portal/sessions/SignIn.jsx"],"names":["React","Component","Card","Checkbox","FormControlLabel","Grid","Button","CircularProgress","withStyles","TextValidator","ValidatorForm","connect","PropTypes","withRouter","loginWithEmailAndPassword","styles","theme","wrapper","position","buttonProgress","top","left","marginTop","marginLeft","SignIn","state","email","password","agreement","handleChange","event","persist","setState","target","name","value","handleFormSubmit","props","classes","login","loading","history","push","mapStateToProps","func","isRequired","withTheme"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,IADF,EAEEC,QAFF,EAGEC,gBAHF,EAIEC,IAJF,EAKEC,MALF,EAMEC,gBANF,QAOO,mBAPP;AAQA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,yBAAT,QAA0C,qCAA1C;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE;AADH,KADc;AAKvBC,IAAAA,cAAc,EAAE;AACdD,MAAAA,QAAQ,EAAE,UADI;AAEdE,MAAAA,GAAG,EAAE,KAFS;AAGdC,MAAAA,IAAI,EAAE,KAHQ;AAIdC,MAAAA,SAAS,EAAE,CAAC,EAJE;AAKdC,MAAAA,UAAU,EAAE,CAAC;AALC;AALO,GAAL;AAAA,CAApB;;IAcMC,M;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,yBADD;AAENC,MAAAA,QAAQ,EAAE,UAFJ;AAGNC,MAAAA,SAAS,EAAE;AAHL,K;;UAKRC,Y,GAAe,UAAAC,KAAK,EAAI;AACtBA,MAAAA,KAAK,CAACC,OAAN;;AACA,YAAKC,QAAL,qBACGF,KAAK,CAACG,MAAN,CAAaC,IADhB,EACuBJ,KAAK,CAACG,MAAN,CAAaE,KADpC;AAGD,K;;UACDC,gB,GAAmB,UAAAN,KAAK,EAAI;AAC1B,YAAKO,KAAL,CAAWvB,yBAAX,mBAA0C,MAAKW,KAA/C;AACD,K;;;;;;;6BACQ;AAAA;;AAAA,wBACmB,KAAKA,KADxB;AAAA,UACDC,KADC,eACDA,KADC;AAAA,UACMC,QADN,eACMA,QADN;AAAA,UAEDW,OAFC,GAEW,KAAKD,KAFhB,CAEDC,OAFC;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,wCAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAgC,QAAA,EAAE,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAC,yBAAT;AAAmC,QAAA,GAAG,EAAC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAME,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAgC,QAAA,EAAE,EAAE,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,4CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAC,MAAnB;AAA0B,QAAA,QAAQ,EAAE,KAAKF,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,OAAO,EAAC,UAFV;AAGE,QAAA,KAAK,EAAC,OAHR;AAIE,QAAA,QAAQ,EAAE,KAAKP,YAJjB;AAKE,QAAA,IAAI,EAAC,OALP;AAME,QAAA,IAAI,EAAC,OANP;AAOE,QAAA,KAAK,EAAEH,KAPT;AAQE,QAAA,UAAU,EAAE,CAAC,UAAD,EAAa,SAAb,CARd;AASE,QAAA,aAAa,EAAE,CACb,wBADa,EAEb,oBAFa,CATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAeE,oBAAC,aAAD;AACE,QAAA,SAAS,EAAC,aADZ;AAEE,QAAA,KAAK,EAAC,UAFR;AAGE,QAAA,OAAO,EAAC,UAHV;AAIE,QAAA,QAAQ,EAAE,KAAKG,YAJjB;AAKE,QAAA,IAAI,EAAC,UALP;AAME,QAAA,IAAI,EAAC,UANP;AAOE,QAAA,KAAK,EAAEF,QAPT;AAQE,QAAA,UAAU,EAAE,CAAC,UAAD,CARd;AASE,QAAA,aAAa,EAAE,CAAC,wBAAD,CATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,EA2BE;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEW,OAAO,CAACrB,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,UAFR;AAGE,QAAA,QAAQ,EAAE,KAAKoB,KAAL,CAAWE,KAAX,CAAiBC,OAH7B;AAIE,QAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EASG,KAAKH,KAAL,CAAWE,KAAX,CAAiBC,OAAjB,IACC,oBAAC,gBAAD;AACE,QAAA,IAAI,EAAE,EADR;AAEE,QAAA,SAAS,EAAEF,OAAO,CAACnB,cAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CADF,EAiBE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,EAkBE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,YADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACkB,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,iBAAxB,CADO;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAlBF,CA3BF,EAsDE,oBAAC,MAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,OAAO,EAAE;AAAA,iBACP,MAAI,CAACL,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,0BAAxB,CADO;AAAA,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAtDF,CADF,EAgEE,oBAAC,gBAAD;AACI,QAAA,SAAS,EAAC,MADd;AAEI,QAAA,IAAI,EAAC,WAFT;AAGI,QAAA,QAAQ,EAAE,KAAKb,YAHnB;AAII,QAAA,OAAO,EAAE,oBAAC,QAAD;AAAU,UAAA,OAAO,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJb;AAKI,QAAA,KAAK,EAAC,gDALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhEF,CADF,CANF,CADF,CADF,CADF,CADF;AAyFD;;;;EA3GkB5B,S;;AA8GrB,IAAM0C,eAAe,GAAG,SAAlBA,eAAkB,CAAAlB,KAAK;AAAA,SAAK;AAChCX,IAAAA,yBAAyB,EAAEF,SAAS,CAACgC,IAAV,CAAeC,UADV;AAEhCN,IAAAA,KAAK,EAAEd,KAAK,CAACc;AAFmB,GAAL;AAAA,CAA7B;;AAIA,eAAe/B,UAAU,CAACO,MAAD,EAAS;AAAE+B,EAAAA,SAAS,EAAE;AAAb,CAAT,CAAV,CACbjC,UAAU,CAACF,OAAO,CAACgC,eAAD,EAAkB;AAAE7B,EAAAA,yBAAyB,EAAzBA;AAAF,CAAlB,CAAP,CAAwDU,MAAxD,CAAD,CADG,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Card,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  Button,\n  CircularProgress\n} from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { TextValidator, ValidatorForm } from \"react-material-ui-form-validator\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { loginWithEmailAndPassword } from \"../../../redux/actions/LoginActions\";\n\nconst styles = theme => ({\n  wrapper: {\n    position: \"relative\"\n  },\n\n  buttonProgress: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12\n  }\n});\n\nclass SignIn extends Component {\n  state = {\n    email: \"phonsoklin670@gmail.com\",\n    password: \"testpass\",\n    agreement: \"\"\n  };\n  handleChange = event => {\n    event.persist();\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n  handleFormSubmit = event => {\n    this.props.loginWithEmailAndPassword({ ...this.state });\n  };\n  render() {\n    let { email, password } = this.state;\n    let { classes } = this.props;\n    return (\n      <div className=\"signup flex justify-center w-full h-full-screen\">\n        <div className=\"p-8\">\n          <Card className=\"signup-card position-relative y-center\">\n            <Grid container>\n              <Grid item lg={5} md={5} sm={5} xs={12}>\n                <div className=\"p-8 flex justify-center items-center h-full\">\n                  <img src=\"/assets/images/lala.png\" alt=\"\" />\n                </div>\n              </Grid>\n              <Grid item lg={7} md={7} sm={7} xs={12}>\n                <div className=\"p-9 h-full bg-light-gray position-relative\">\n                  <ValidatorForm ref=\"form\" onSubmit={this.handleFormSubmit}>\n                    <TextValidator\n                      className=\"mb-6 w-full\"\n                      variant=\"outlined\"\n                      label=\"Email\"\n                      onChange={this.handleChange}\n                      type=\"email\"\n                      name=\"email\"\n                      value={email}\n                      validators={[\"required\", \"isEmail\"]}\n                      errorMessages={[\n                        \"this field is required\",\n                        \"email is not valid\"\n                      ]}\n                    />\n                    <TextValidator\n                      className=\"mb-3 w-full\"\n                      label=\"Password\"\n                      variant=\"outlined\"\n                      onChange={this.handleChange}\n                      name=\"password\"\n                      type=\"password\"\n                      value={password}\n                      validators={[\"required\"]}\n                      errorMessages={[\"this field is required\"]}\n                    />\n          \n                    <div className=\"flex flex-wrap items-center mb-4\">\n                      <div className={classes.wrapper}>\n                        <Button\n                          variant=\"contained\"\n                          color=\"primarys\"\n                          disabled={this.props.login.loading}\n                          type=\"submit\"\n                        >\n                          Sign in\n                        </Button>\n                        {this.props.login.loading && (\n                          <CircularProgress\n                            size={24}\n                            className={classes.buttonProgress}\n                          />\n                        )}\n                      </div>\n                      <span className=\"mr-2 ml-5\">or</span>\n                      <Button\n                        className=\"capitalize\"\n                        onClick={() =>\n                          this.props.history.push(\"/session/signup\")\n                        }\n                      >\n                        Sign up\n                      </Button>\n                    </div>\n                    <Button\n                      className=\"text-primary\"\n                      onClick={() =>\n                        this.props.history.push(\"/session/forgot-password\")\n                      }\n                    >\n                      Forgot password?\n                    </Button>\n                  </ValidatorForm>\n                  <FormControlLabel\n                      className=\"mb-3\"\n                      name=\"agreement\"\n                      onChange={this.handleChange}\n                      control={<Checkbox checked />}\n                      label=\"I have read and agree to the terms of service.\"\n                    />\n                </div>\n              </Grid>\n            </Grid>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  loginWithEmailAndPassword: PropTypes.func.isRequired,\n  login: state.login\n});\nexport default withStyles(styles, { withTheme: true })(\n  withRouter(connect(mapStateToProps, { loginWithEmailAndPassword })(SignIn))\n);\n"]},"metadata":{},"sourceType":"module"}