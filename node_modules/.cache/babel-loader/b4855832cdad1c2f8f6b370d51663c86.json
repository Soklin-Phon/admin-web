{"ast":null,"code":"import _classCallCheck from \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\";\nimport firebaseConfig from \"./firebaseConfig\";\n\nvar FirebaseAuthService = function FirebaseAuthService() {\n  var _this = this;\n\n  _classCallCheck(this, FirebaseAuthService);\n\n  this.init = function () {\n    firebase.initializeApp(firebaseConfig);\n  };\n\n  this.checkAuthStatus = function (callback) {\n    _this.auth.onAuthStateChanged(callback);\n  };\n\n  this.signUpWithEmailAndPassword = function (email, password) {\n    return _this.auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  this.signInWithEmailAndPassword = function (email, password) {\n    return _this.auth.signInWithEmailAndPassword(email, password);\n  };\n\n  this.signInWithPopup = function (media) {\n    switch (media) {\n      case \"google\":\n        return _this.auth.signInWithPopup(_this.googleProvider);\n\n      case \"facebook\":\n        return _this.auth.signInWithPopup(_this.facebookProvider);\n\n      case \"twitter\":\n        return _this.auth.signInWithPopup(_this.twitterProvider);\n\n      default:\n        break;\n    }\n  };\n\n  this.signInWithPhoneNumber = function (phoneNumber) {\n    return _this.auth.signInWithPhoneNumber(phoneNumber);\n  };\n\n  this.getUserData = function (docId) {\n    //   generally it's better to use uid for docId\n    _this.firestore.collection(\"users\").doc(docId).get().then(function (doc) {\n      console.log(doc.data());\n    });\n  };\n\n  this.getAllUser = function () {\n    _this.firestore.collection(\"users\").get().then(function (docList) {\n      docList.forEach(function (doc) {\n        console.log(doc.data());\n      });\n    });\n  };\n\n  this.signOut = function () {\n    return _this.auth.signOut();\n  };\n};\n\nvar instance = new FirebaseAuthService();\nexport default instance;","map":{"version":3,"sources":["/home/soklin/Project/MIS/Dev-MIS/front-end/mis/src/app/services/firebase/firebaseAuthService.js"],"names":["firebase","firebaseConfig","FirebaseAuthService","init","initializeApp","checkAuthStatus","callback","auth","onAuthStateChanged","signUpWithEmailAndPassword","email","password","createUserWithEmailAndPassword","signInWithEmailAndPassword","signInWithPopup","media","googleProvider","facebookProvider","twitterProvider","signInWithPhoneNumber","phoneNumber","getUserData","docId","firestore","collection","doc","get","then","console","log","data","getAllUser","docList","forEach","signOut","instance"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,6BAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;IAEMC,mB;;;;;OAwBJC,I,GAAO,YAAM;AACXH,IAAAA,QAAQ,CAACI,aAAT,CAAuBH,cAAvB;AACD,G;;OAEDI,e,GAAkB,UAAAC,QAAQ,EAAI;AAC5B,IAAA,KAAI,CAACC,IAAL,CAAUC,kBAAV,CAA6BF,QAA7B;AACD,G;;OAEDG,0B,GAA6B,UAACC,KAAD,EAAQC,QAAR,EAAqB;AAChD,WAAO,KAAI,CAACJ,IAAL,CAAUK,8BAAV,CAAyCF,KAAzC,EAAgDC,QAAhD,CAAP;AACD,G;;OAEDE,0B,GAA6B,UAACH,KAAD,EAAQC,QAAR,EAAqB;AAChD,WAAO,KAAI,CAACJ,IAAL,CAAUM,0BAAV,CAAqCH,KAArC,EAA4CC,QAA5C,CAAP;AACD,G;;OAEDG,e,GAAkB,UAAAC,KAAK,EAAI;AACzB,YAAQA,KAAR;AACE,WAAK,QAAL;AACE,eAAO,KAAI,CAACR,IAAL,CAAUO,eAAV,CAA0B,KAAI,CAACE,cAA/B,CAAP;;AAEF,WAAK,UAAL;AACE,eAAO,KAAI,CAACT,IAAL,CAAUO,eAAV,CAA0B,KAAI,CAACG,gBAA/B,CAAP;;AAEF,WAAK,SAAL;AACE,eAAO,KAAI,CAACV,IAAL,CAAUO,eAAV,CAA0B,KAAI,CAACI,eAA/B,CAAP;;AAEF;AACE;AAXJ;AAaD,G;;OAEDC,qB,GAAwB,UAAAC,WAAW,EAAI;AACrC,WAAO,KAAI,CAACb,IAAL,CAAUY,qBAAV,CAAgCC,WAAhC,CAAP;AACD,G;;OAEDC,W,GAAc,UAAAC,KAAK,EAAI;AACrB;AACA,IAAA,KAAI,CAACC,SAAL,CACGC,UADH,CACc,OADd,EAEGC,GAFH,CAEOH,KAFP,EAGGI,GAHH,GAIGC,IAJH,CAIQ,UAAAF,GAAG,EAAI;AACXG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAJ,EAAZ;AACD,KANH;AAOD,G;;OAEDC,U,GAAa,YAAM;AACjB,IAAA,KAAI,CAACR,SAAL,CACGC,UADH,CACc,OADd,EAEGE,GAFH,GAGGC,IAHH,CAGQ,UAAAK,OAAO,EAAI;AACfA,MAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAR,GAAG,EAAI;AACrBG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAJ,EAAZ;AACD,OAFD;AAGD,KAPH;AAQD,G;;OAEDI,O,GAAU,YAAM;AACd,WAAO,KAAI,CAAC3B,IAAL,CAAU2B,OAAV,EAAP;AACD,G;;;AAGH,IAAMC,QAAQ,GAAG,IAAIjC,mBAAJ,EAAjB;AAEA,eAAeiC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firebase-firestore\";\nimport firebaseConfig from \"./firebaseConfig\";\n\nclass FirebaseAuthService {\n  auth;\n  firestore;\n  //   database;\n  //   storage;\n\n  googleProvider;\n  facebookProvider;\n  twitterProvider;\n\n  // // UNCOMMENT IF YOU WANT TO USE FIREBASE\n  // constructor() {\n  //   this.init();\n  //   this.auth = firebase.auth();\n  //   this.firestore = firebase.firestore();\n\n  //   this.database = firebase.database();\n  //   this.storage = firebase.storage();\n\n  //   this.googleProvider = new firebase.auth.GoogleAuthProvider();\n  //   this.facebookProvider = new firebase.auth.FacebookAuthProvider();\n  //   this.twitterProvider = new firebase.auth.TwitterAuthProvider();\n  // }\n\n  init = () => {\n    firebase.initializeApp(firebaseConfig);\n  };\n\n  checkAuthStatus = callback => {\n    this.auth.onAuthStateChanged(callback);\n  };\n\n  signUpWithEmailAndPassword = (email, password) => {\n    return this.auth.createUserWithEmailAndPassword(email, password);\n  };\n\n  signInWithEmailAndPassword = (email, password) => {\n    return this.auth.signInWithEmailAndPassword(email, password);\n  };\n\n  signInWithPopup = media => {\n    switch (media) {\n      case \"google\":\n        return this.auth.signInWithPopup(this.googleProvider);\n\n      case \"facebook\":\n        return this.auth.signInWithPopup(this.facebookProvider);\n\n      case \"twitter\":\n        return this.auth.signInWithPopup(this.twitterProvider);\n\n      default:\n        break;\n    }\n  };\n\n  signInWithPhoneNumber = phoneNumber => {\n    return this.auth.signInWithPhoneNumber(phoneNumber);\n  };\n\n  getUserData = docId => {\n    //   generally it's better to use uid for docId\n    this.firestore\n      .collection(\"users\")\n      .doc(docId)\n      .get()\n      .then(doc => {\n        console.log(doc.data());\n      });\n  };\n\n  getAllUser = () => {\n    this.firestore\n      .collection(\"users\")\n      .get()\n      .then(docList => {\n        docList.forEach(doc => {\n          console.log(doc.data());\n        });\n      });\n  };\n\n  signOut = () => {\n    return this.auth.signOut();\n  };\n}\n\nconst instance = new FirebaseAuthService();\n\nexport default instance;\n"]},"metadata":{},"sourceType":"module"}