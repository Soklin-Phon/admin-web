{"ast":null,"code":"import _defineProperty from \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/soklin/Project/MIS/Dev-MIS/front-end/mis/src/app/MatxLayout/Layout1/Layout1.jsx\";\n// import React, { useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { withStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { classList } from \"utils\";\nimport { renderRoutes } from \"react-router-config\";\nimport Layout1Topbar from \"./Layout1Topbar\";\nimport Layout1Sidenav from \"./Layout1Sidenav\";\nimport Footer from \"../SharedCompoents/Footer\"; // import SecondarySidebar from \"../SharedCompoents/SecondarySidebar/SecondarySidebar\";\n\nimport AppContext from \"app/appContext\";\nimport { MatxSuspense } from \"matx\";\n\nvar styles = function styles(theme) {\n  return {\n    layout: {\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n\nvar Layout1 = function Layout1(props) {\n  var _layoutClasses;\n\n  var _useContext = useContext(AppContext),\n      routes = _useContext.routes;\n\n  var settings = props.settings,\n      classes = props.classes,\n      theme = props.theme;\n  var layout1Settings = settings.layout1Settings;\n  var topbarTheme = settings.themes[layout1Settings.topbar.theme];\n  var layoutClasses = (_layoutClasses = {}, _defineProperty(_layoutClasses, classes.layout, true), _defineProperty(_layoutClasses, \"\".concat(settings.activeLayout, \" sidenav-\").concat(layout1Settings.leftSidebar.mode, \" theme-\").concat(theme.palette.type, \" flex\"), true), _defineProperty(_layoutClasses, \"topbar-fixed\", layout1Settings.topbar.fixed), _layoutClasses);\n  return React.createElement(\"div\", {\n    className: classList(layoutClasses),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, layout1Settings.leftSidebar.show && React.createElement(Layout1Sidenav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"content-wrap position-relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, layout1Settings.topbar.show && layout1Settings.topbar.fixed && React.createElement(ThemeProvider, {\n    theme: topbarTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Layout1Topbar, {\n    fixed: true,\n    className: \"elevation-z8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), settings.perfectScrollbar && React.createElement(Scrollbar, {\n    className: \"scrollable-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, layout1Settings.topbar.show && !layout1Settings.topbar.fixed && React.createElement(ThemeProvider, {\n    theme: topbarTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Layout1Topbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(MatxSuspense, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, renderRoutes(routes))), React.createElement(\"div\", {\n    className: \"my-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), settings.footer.show && !settings.footer.fixed && React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), !settings.perfectScrollbar && React.createElement(\"div\", {\n    className: \"scrollable-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, layout1Settings.topbar.show && !layout1Settings.topbar.fixed && React.createElement(Layout1Topbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(MatxSuspense, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, renderRoutes(routes))), React.createElement(\"div\", {\n    className: \"my-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), settings.footer.show && !settings.footer.fixed && React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })), settings.footer.show && settings.footer.fixed && React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })));\n};\n\nLayout1.propTypes = {\n  settings: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    setLayoutSettings: PropTypes.func.isRequired,\n    settings: state.layout.settings\n  };\n};\n\nexport default withStyles(styles, {\n  withTheme: true\n})(connect(mapStateToProps, {\n  setLayoutSettings: setLayoutSettings\n})(Layout1));","map":{"version":3,"sources":["/home/soklin/Project/MIS/Dev-MIS/front-end/mis/src/app/MatxLayout/Layout1/Layout1.jsx"],"names":["connect","PropTypes","setLayoutSettings","withStyles","ThemeProvider","Scrollbar","classList","renderRoutes","Layout1Topbar","Layout1Sidenav","Footer","AppContext","MatxSuspense","styles","theme","layout","backgroundColor","palette","background","default","Layout1","props","useContext","routes","settings","classes","layout1Settings","topbarTheme","themes","topbar","layoutClasses","activeLayout","leftSidebar","mode","type","fixed","show","perfectScrollbar","footer","propTypes","object","isRequired","mapStateToProps","state","func","withTheme"],"mappings":"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","sourcesContent":["// import React, { useContext } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\nimport { withStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { classList } from \"utils\";\nimport { renderRoutes } from \"react-router-config\";\nimport Layout1Topbar from \"./Layout1Topbar\";\nimport Layout1Sidenav from \"./Layout1Sidenav\";\nimport Footer from \"../SharedCompoents/Footer\";\n// import SecondarySidebar from \"../SharedCompoents/SecondarySidebar/SecondarySidebar\";\nimport AppContext from \"app/appContext\";\nimport { MatxSuspense } from \"matx\";\n\nconst styles = theme => {\n  return {\n    layout: {\n      backgroundColor: theme.palette.background.default\n    }\n  };\n};\n\nconst Layout1 = props => {\n  const { routes } = useContext(AppContext);\n  let { settings, classes, theme } = props;\n  let { layout1Settings } = settings;\n  const topbarTheme = settings.themes[layout1Settings.topbar.theme];\n  let layoutClasses = {\n    [classes.layout]: true,\n    [`${settings.activeLayout} sidenav-${layout1Settings.leftSidebar.mode} theme-${theme.palette.type} flex`]: true,\n    \"topbar-fixed\": layout1Settings.topbar.fixed\n  };\n\n  return (\n    <div className={classList(layoutClasses)}>\n      {layout1Settings.leftSidebar.show && <Layout1Sidenav />}\n\n      <div className=\"content-wrap position-relative\">\n        {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\n          <ThemeProvider theme={topbarTheme}>\n            <Layout1Topbar fixed={true} className=\"elevation-z8\" />\n          </ThemeProvider>\n        )}\n\n        {settings.perfectScrollbar && (\n          <Scrollbar className=\"scrollable-content\">\n            {layout1Settings.topbar.show && !layout1Settings.topbar.fixed && (\n              <ThemeProvider theme={topbarTheme}>\n                <Layout1Topbar />\n              </ThemeProvider>\n            )}\n            <div className=\"content\">\n              <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\n            </div>\n            <div className=\"my-auto\" />\n            {settings.footer.show && !settings.footer.fixed && <Footer />}\n          </Scrollbar>\n        )}\n\n        {!settings.perfectScrollbar && (\n          <div className=\"scrollable-content\">\n            {layout1Settings.topbar.show && !layout1Settings.topbar.fixed && (\n              <Layout1Topbar />\n            )}\n            <div className=\"content\">\n              <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\n            </div>\n            <div className=\"my-auto\" />\n            {settings.footer.show && !settings.footer.fixed && <Footer />}\n          </div>\n        )}\n\n        {settings.footer.show && settings.footer.fixed && <Footer />}\n      </div>\n      {/* {settings.secondarySidebar.show && <SecondarySidebar />} */}\n    </div>\n  );\n};\n\nLayout1.propTypes = {\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  connect(mapStateToProps, { setLayoutSettings })(Layout1)\n);\n"]},"metadata":{},"sourceType":"module"}