{"ast":null,"code":"import _defineProperty from \"/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/src/app/MatxLayout/SharedCompoents/Sidenav.jsx\";\nimport React, { Fragment } from \"react\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { navigations } from \"../../navigations\";\nimport { MatxVerticalNav } from \"matx\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\n\nvar Sidenav = function Sidenav(props) {\n  var updateSidebarMode = function updateSidebarMode(sidebarSettings) {\n    var settings = props.settings,\n        setLayoutSettings = props.setLayoutSettings;\n    var activeLayoutSettingsName = settings.activeLayout + \"Settings\";\n    var activeLayoutSettings = settings[activeLayoutSettingsName];\n    setLayoutSettings(_objectSpread({}, settings, _defineProperty({}, activeLayoutSettingsName, _objectSpread({}, activeLayoutSettings, {\n      leftSidebar: _objectSpread({}, activeLayoutSettings.leftSidebar, {}, sidebarSettings)\n    }))));\n  };\n\n  var renderOverlay = function renderOverlay() {\n    return React.createElement(\"div\", {\n      onClick: function onClick() {\n        return updateSidebarMode({\n          mode: \"close\"\n        });\n      },\n      className: \"sidenav__overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Scrollbar, {\n    options: {\n      suppressScrollX: true\n    },\n    className: \"scrollable position-relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, props.children, React.createElement(MatxVerticalNav, {\n    navigation: navigations,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), renderOverlay());\n};\n\nSidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    setLayoutSettings: PropTypes.func.isRequired,\n    settings: state.layout.settings\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  setLayoutSettings: setLayoutSettings\n})(Sidenav));","map":{"version":3,"sources":["/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/src/app/MatxLayout/SharedCompoents/Sidenav.jsx"],"names":["React","Fragment","Scrollbar","withRouter","connect","PropTypes","navigations","MatxVerticalNav","setLayoutSettings","Sidenav","props","updateSidebarMode","sidebarSettings","settings","activeLayoutSettingsName","activeLayout","activeLayoutSettings","leftSidebar","renderOverlay","mode","suppressScrollX","children","propTypes","func","isRequired","object","mapStateToProps","state","layout"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,eAAT,QAAgC,MAAhC;AACA,SAASC,iBAAT,QAAkC,iCAAlC;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,KAAK,EAAI;AACvB,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,eAAe,EAAI;AAAA,QACrCC,QADqC,GACLH,KADK,CACrCG,QADqC;AAAA,QAC3BL,iBAD2B,GACLE,KADK,CAC3BF,iBAD2B;AAE3C,QAAIM,wBAAwB,GAAGD,QAAQ,CAACE,YAAT,GAAwB,UAAvD;AACA,QAAIC,oBAAoB,GAAGH,QAAQ,CAACC,wBAAD,CAAnC;AAEAN,IAAAA,iBAAiB,mBACZK,QADY,sBAEdC,wBAFc,oBAGVE,oBAHU;AAIbC,MAAAA,WAAW,oBACND,oBAAoB,CAACC,WADf,MAENL,eAFM;AAJE,SAAjB;AAUD,GAfD;;AAiBA,MAAMM,aAAa,GAAG,SAAhBA,aAAgB;AAAA,WACpB;AACE,MAAA,OAAO,EAAE;AAAA,eAAMP,iBAAiB,CAAC;AAAEQ,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAvB;AAAA,OADX;AAEE,MAAA,SAAS,EAAC,kBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADoB;AAAA,GAAtB;;AAOA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,OAAO,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KADX;AAEE,IAAA,SAAS,EAAC,8BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGV,KAAK,CAACW,QAJT,EAKE,oBAAC,eAAD;AAAiB,IAAA,UAAU,EAAEf,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,EAQGY,aAAa,EARhB,CADF;AAYD,CArCD;;AAuCAT,OAAO,CAACa,SAAR,GAAoB;AAClBd,EAAAA,iBAAiB,EAAEH,SAAS,CAACkB,IAAV,CAAeC,UADhB;AAElBX,EAAAA,QAAQ,EAAER,SAAS,CAACoB,MAAV,CAAiBD;AAFT,CAApB;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCnB,IAAAA,iBAAiB,EAAEH,SAAS,CAACkB,IAAV,CAAeC,UADF;AAEhCX,IAAAA,QAAQ,EAAEc,KAAK,CAACC,MAAN,CAAaf;AAFS,GAAL;AAAA,CAA7B;;AAKA,eAAeV,UAAU,CACvBC,OAAO,CAACsB,eAAD,EAAkB;AACvBlB,EAAAA,iBAAiB,EAAjBA;AADuB,CAAlB,CAAP,CAEGC,OAFH,CADuB,CAAzB","sourcesContent":["import React, { Fragment } from \"react\";\nimport Scrollbar from \"react-perfect-scrollbar\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { navigations } from \"../../navigations\";\nimport { MatxVerticalNav } from \"matx\";\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\n\nconst Sidenav = props => {\n  const updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings } = props;\n    let activeLayoutSettingsName = settings.activeLayout + \"Settings\";\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\n\n    setLayoutSettings({\n      ...settings,\n      [activeLayoutSettingsName]: {\n        ...activeLayoutSettings,\n        leftSidebar: {\n          ...activeLayoutSettings.leftSidebar,\n          ...sidebarSettings\n        }\n      }\n    });\n  };\n\n  const renderOverlay = () => (\n    <div\n      onClick={() => updateSidebarMode({ mode: \"close\" })}\n      className=\"sidenav__overlay\"\n    />\n  );\n\n  return (\n    <Fragment>\n      <Scrollbar\n        options={{ suppressScrollX: true }}\n        className=\"scrollable position-relative\"\n      >\n        {props.children}\n        <MatxVerticalNav navigation={navigations} />\n      </Scrollbar>\n      {renderOverlay()}\n    </Fragment>\n  );\n};\n\nSidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setLayoutSettings: PropTypes.func.isRequired,\n  settings: state.layout.settings\n});\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    setLayoutSettings\n  })(Sidenav)\n);\n"]},"metadata":{},"sourceType":"module"}