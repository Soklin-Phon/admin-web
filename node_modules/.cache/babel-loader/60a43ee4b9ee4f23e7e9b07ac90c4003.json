{"ast":null,"code":"import _objectSpread from \"/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/src/app/MatxLayout/Layout1/Layout1Sidenav.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Icon, MenuItem, Tooltip, IconButton } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { setLayoutSettings, setDefaultSettings } from \"app/redux/actions/LayoutActions\";\nimport { logoutUser } from \"app/redux/actions/UserActions\";\nimport { withRouter } from \"react-router-dom\";\nimport Sidenav from \"../SharedCompoents/Sidenav\";\nimport Brand from \"../SharedCompoents/Brand\";\nimport SidenavTheme from \"../MatxTheme/SidenavTheme/SidenavTheme\";\nimport { isMdScreen } from \"utils\";\nimport { merge } from \"lodash\";\n\nvar styles = function styles(theme) {\n  return {};\n};\n\nvar IconButtonWhite = withStyles(function (theme) {\n  return {\n    root: {\n      backgroundColor: \"transparent\",\n      padding: \"5px\"\n    }\n  };\n})(IconButton);\nvar IconSmall = withStyles(function () {\n  return {\n    root: {\n      fontSize: \"1rem\"\n    }\n  };\n})(Icon);\n\nvar Layout1Sidenav = /*#__PURE__*/function (_Component) {\n  _inherits(Layout1Sidenav, _Component);\n\n  function Layout1Sidenav() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Layout1Sidenav);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Layout1Sidenav)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      hidden: true\n    };\n\n    _this.updateSidebarMode = function (sidebarSettings) {\n      var _this$props = _this.props,\n          settings = _this$props.settings,\n          setLayoutSettings = _this$props.setLayoutSettings,\n          setDefaultSettings = _this$props.setDefaultSettings;\n      var updatedSettings = merge({}, settings, {\n        layout1Settings: {\n          leftSidebar: _objectSpread({}, sidebarSettings)\n        }\n      });\n      setLayoutSettings(updatedSettings);\n      setDefaultSettings(updatedSettings);\n    };\n\n    _this.handleSidenavToggle = function () {\n      var mode = _this.props.settings.layout1Settings.leftSidebar.mode;\n      console.log(mode);\n\n      _this.updateSidebarMode({\n        mode: mode === \"compact\" ? \"full\" : \"compact\"\n      });\n    };\n\n    _this.handleSignOut = function () {\n      _this.props.logoutUser();\n    };\n\n    _this.renderLogoSwitch = function () {\n      return (// Open Brand component file to replace logo and text\n        React.createElement(Brand, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(Switch, {\n          className: \"sidenav__toggle show-on-pc\",\n          onChange: _this.handleSidenavToggle,\n          checked: !(_this.props.settings.layout1Settings.leftSidebar.mode === \"full\"),\n          color: \"secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }))\n      );\n    };\n\n    _this.renderUser = function () {\n      var user = _this.props.user;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Layout1Sidenav, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\n      this.unlistenRouteChange = this.props.history.listen(function (location, action) {\n        if (isMdScreen()) {\n          _this2.updateSidebarMode({\n            mode: \"close\"\n          });\n        }\n      });\n      setTimeout(function () {\n        _this2.setState({\n          hidden: false\n        });\n      }, 400);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unlistenRouteChange();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          theme = _this$props2.theme,\n          settings = _this$props2.settings;\n      var sidenavTheme = settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\n      return React.createElement(SidenavTheme, {\n        theme: sidenavTheme,\n        settings: settings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sidenav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sidenav__hold\",\n        style: {\n          backgroundImage: \"url(\".concat(settings.layout1Settings.leftSidebar.bgImgURL, \")\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, !this.state.hidden && React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, this.renderLogoSwitch(), React.createElement(Sidenav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, this.renderUser())))));\n    }\n  }]);\n\n  return Layout1Sidenav;\n}(Component);\n\nLayout1Sidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    setDefaultSettings: PropTypes.func.isRequired,\n    setLayoutSettings: PropTypes.func.isRequired,\n    logoutUser: PropTypes.func.isRequired,\n    user: state.user,\n    settings: state.layout.settings\n  };\n};\n\nexport default withStyles(styles, {\n  withTheme: true\n})(withRouter(connect(mapStateToProps, {\n  setLayoutSettings: setLayoutSettings,\n  setDefaultSettings: setDefaultSettings,\n  logoutUser: logoutUser\n})(Layout1Sidenav)));","map":{"version":3,"sources":["/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/src/app/MatxLayout/Layout1/Layout1Sidenav.jsx"],"names":["React","Component","Fragment","PropTypes","Switch","Icon","MenuItem","Tooltip","IconButton","withStyles","connect","setLayoutSettings","setDefaultSettings","logoutUser","withRouter","Sidenav","Brand","SidenavTheme","isMdScreen","merge","styles","theme","IconButtonWhite","root","backgroundColor","padding","IconSmall","fontSize","Layout1Sidenav","state","hidden","updateSidebarMode","sidebarSettings","props","settings","updatedSettings","layout1Settings","leftSidebar","handleSidenavToggle","mode","console","log","handleSignOut","renderLogoSwitch","renderUser","user","unlistenRouteChange","history","listen","location","action","setTimeout","setState","sidenavTheme","themes","backgroundImage","bgImgURL","propTypes","func","isRequired","object","mapStateToProps","layout","withTheme"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Icon, MenuItem, Tooltip, IconButton } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { connect } from \"react-redux\";\nimport {\n  setLayoutSettings,\n  setDefaultSettings\n} from \"app/redux/actions/LayoutActions\";\nimport { logoutUser } from \"app/redux/actions/UserActions\";\nimport { withRouter } from \"react-router-dom\";\nimport Sidenav from \"../SharedCompoents/Sidenav\";\nimport Brand from \"../SharedCompoents/Brand\";\nimport SidenavTheme from \"../MatxTheme/SidenavTheme/SidenavTheme\";\nimport { isMdScreen } from \"utils\";\nimport { merge } from \"lodash\";\n\nconst styles = theme => ({});\n\nconst IconButtonWhite = withStyles(theme => ({\n  root: {\n    backgroundColor: \"transparent\",\n    padding: \"5px\"\n  }\n}))(IconButton);\n\nconst IconSmall = withStyles(() => ({\n  root: {\n    fontSize: \"1rem\"\n  }\n}))(Icon);\n\nclass Layout1Sidenav extends Component {\n  state = {\n    hidden: true\n  };\n\n  componentDidMount() {\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\n      if (isMdScreen()) {\n        this.updateSidebarMode({ mode: \"close\" });\n      }\n    });\n\n    setTimeout(() => {\n      this.setState({ hidden: false });\n    }, 400);\n  }\n\n  componentWillUnmount() {\n    this.unlistenRouteChange();\n  }\n\n  updateSidebarMode = sidebarSettings => {\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\n    const updatedSettings = merge({}, settings, {\n      layout1Settings: {\n        leftSidebar: {\n          ...sidebarSettings\n        }\n      }\n    });\n\n    setLayoutSettings(updatedSettings);\n    setDefaultSettings(updatedSettings);\n  };\n\n  handleSidenavToggle = () => {\n    let {\n      settings: {\n        layout1Settings: {\n          leftSidebar: { mode }\n        }\n      }\n    } = this.props;\n\n    console.log(mode);\n\n    this.updateSidebarMode({ mode: mode === \"compact\" ? \"full\" : \"compact\" });\n  };\n\n  handleSignOut = () => {\n    this.props.logoutUser();\n  };\n\n  renderLogoSwitch = () => (\n    // Open Brand component file to replace logo and text\n    <Brand>\n      <Switch\n        className=\"sidenav__toggle show-on-pc\"\n        onChange={this.handleSidenavToggle}\n        checked={\n          !(this.props.settings.layout1Settings.leftSidebar.mode === \"full\")\n        }\n        color=\"secondary\"\n      />\n    </Brand>\n  );\n\n  renderUser = () => {\n    let { user } = this.props;\n    return (\n      <div>\n        \n      </div>\n    );\n  };\n\n  render() {\n    let { theme, settings } = this.props;\n    const sidenavTheme =\n      settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\n    return (\n      <SidenavTheme theme={sidenavTheme} settings={settings}>\n        <div className=\"sidenav\">\n          <div\n            className=\"sidenav__hold\"\n            style={{\n              backgroundImage: `url(${settings.layout1Settings.leftSidebar.bgImgURL})`\n            }}\n          >\n            {!this.state.hidden && (\n              <Fragment>\n                {this.renderLogoSwitch()}\n                <Sidenav>{this.renderUser()}</Sidenav>\n              </Fragment>\n            )}\n          </div>\n        </div>\n      </SidenavTheme>\n    );\n  }\n}\n\nLayout1Sidenav.propTypes = {\n  setLayoutSettings: PropTypes.func.isRequired,\n  setDefaultSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  settings: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  setDefaultSettings: PropTypes.func.isRequired,\n  setLayoutSettings: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  user: state.user,\n  settings: state.layout.settings\n});\n\nexport default withStyles(styles, { withTheme: true })(\n  withRouter(\n    connect(mapStateToProps, {\n      setLayoutSettings,\n      setDefaultSettings,\n      logoutUser\n    })(Layout1Sidenav)\n  )\n);\n"]},"metadata":{},"sourceType":"module"}