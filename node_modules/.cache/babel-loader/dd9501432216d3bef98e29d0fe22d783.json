{"ast":null,"code":"import React,{useContext,useEffect}from\"react\";import{MatxLayouts}from\"./index\";import PropTypes from\"prop-types\";import{withRouter}from\"react-router-dom\";import{matchRoutes}from\"react-router-config\";import{connect}from\"react-redux\";import AppContext from\"app/appContext\";import{setLayoutSettings,setDefaultSettings}from\"app/redux/actions/LayoutActions\";import{isEqual,merge}from\"lodash\";import{isMdScreen}from\"utils\";import{MatxSuspense}from\"matx\";var tempSettings;var MatxLayoutSFC=function MatxLayoutSFC(props){var appContext=useContext(AppContext);var settings=props.settings,defaultSettings=props.defaultSettings,setLayoutSettings=props.setLayoutSettings,setDefaultSettings=props.setDefaultSettings;tempSettings=settings;useEffect(function(){listenWindowResize();if(window){// LISTEN WINDOW RESIZE\nwindow.addEventListener(\"resize\",listenWindowResize);}return function(){if(window){window.removeEventListener(\"resize\",listenWindowResize);}};},[]);useEffect(function(){updateSettingsFromRouter();},[props.location]);var listenWindowResize=function listenWindowResize(){var settings=tempSettings;if(settings.layout1Settings.leftSidebar.show){var mode=isMdScreen()?\"close\":\"full\";setLayoutSettings(merge({},settings,{layout1Settings:{leftSidebar:{mode:mode}}}));}};var updateSettingsFromRouter=function updateSettingsFromRouter(){var routes=appContext.routes;var matched=matchRoutes(routes,props.location.pathname)[0];if(matched&&matched.route.settings){// ROUTE HAS SETTINGS\nvar updatedSettings=merge({},settings,matched.route.settings);if(!isEqual(settings,updatedSettings)){setLayoutSettings(updatedSettings);// console.log('Route has settings');\n}}else if(!isEqual(settings,defaultSettings)){setLayoutSettings(defaultSettings);// console.log('reset settings', defaultSettings);\n}};var Layout=MatxLayouts[settings.activeLayout];return React.createElement(MatxSuspense,null,React.createElement(Layout,props));};var mapStateToProps=function mapStateToProps(state){return{setLayoutSettings:PropTypes.func.isRequired,setDefaultSettings:PropTypes.func.isRequired,settings:state.layout.settings,defaultSettings:state.layout.defaultSettings};};export default withRouter(connect(mapStateToProps,{setLayoutSettings:setLayoutSettings,setDefaultSettings:setDefaultSettings})(MatxLayoutSFC));","map":null,"metadata":{},"sourceType":"module"}