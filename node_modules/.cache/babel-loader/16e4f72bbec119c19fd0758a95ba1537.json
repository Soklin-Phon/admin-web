{"ast":null,"code":"import _regeneratorRuntime from \"/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/src/app/auth/Auth.jsx\";\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { setUserData } from \"../redux/actions/UserActions\";\nimport { getNavigationByUser } from \"../redux/actions/NavigationAction\";\nimport jwtAuthService from \"../services/jwtAuthService\";\nimport localStorageService from \"../services/localStorageService\"; // import firebaseAuthService from \"../services/firebase/firebaseAuthService\";\n\nimport history from \"history.js\";\n\nvar checkJwtAuth = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(setUserData) {\n    var user;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return jwtAuthService.loginWithToken();\n\n          case 2:\n            user = _context.sent;\n            if (user) setUserData(user);else history.push({\n              pathname: \"/session/signin\"\n            });\n            return _context.abrupt(\"return\", user);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function checkJwtAuth(_x) {\n    return _ref.apply(this, arguments);\n  };\n}(); // const checkFirebaseAuth = () => {\n//   firebaseAuthService.checkAuthStatus(user => {\n//     if (user) {\n//       console.log(user.uid);\n//       console.log(user.email);\n//       console.log(user.emailVerified);\n//     } else {\n//       console.log(\"not logged in\");\n//     }\n//   });\n// };\n\n\nvar Auth = function Auth(_ref2) {\n  var children = _ref2.children,\n      setUserData = _ref2.setUserData,\n      getNavigationByUser = _ref2.getNavigationByUser;\n  setUserData(localStorageService.getItem(\"auth_user\"));\n  useEffect(function () {\n    checkJwtAuth(setUserData);\n    getNavigationByUser();\n  }, [setUserData, getNavigationByUser]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, children);\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    setUserData: PropTypes.func.isRequired,\n    getNavigationByUser: PropTypes.func.isRequired,\n    login: state.login\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setUserData: setUserData,\n  getNavigationByUser: getNavigationByUser\n})(Auth);","map":{"version":3,"sources":["/home/soklin/Documents/Project/MIS/Dev-MIS/front-end/mis/src/app/auth/Auth.jsx"],"names":["React","Fragment","useEffect","connect","PropTypes","setUserData","getNavigationByUser","jwtAuthService","localStorageService","history","checkJwtAuth","loginWithToken","user","push","pathname","Auth","children","getItem","mapStateToProps","state","func","isRequired","login"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAASC,mBAAT,QAAoC,mCAApC;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,mBAAP,MAAgC,iCAAhC,C,CACA;;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,IAAMC,YAAY;AAAA,sEAAG,iBAAML,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAGFE,cAAc,CAACI,cAAf,EAHE;;AAAA;AAGfC,YAAAA,IAHe;AAInB,gBAAIA,IAAJ,EAAUP,WAAW,CAACO,IAAD,CAAX,CAAV,KAEEH,OAAO,CAACI,IAAR,CAAa;AACXC,cAAAA,QAAQ,EAAE;AADC,aAAb;AANiB,6CASZF,IATY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAZF,YAAY;AAAA;AAAA;AAAA,GAAlB,C,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAMK,IAAI,GAAG,SAAPA,IAAO,QAAoD;AAAA,MAAjDC,QAAiD,SAAjDA,QAAiD;AAAA,MAAvCX,WAAuC,SAAvCA,WAAuC;AAAA,MAA1BC,mBAA0B,SAA1BA,mBAA0B;AAC/DD,EAAAA,WAAW,CAACG,mBAAmB,CAACS,OAApB,CAA4B,WAA5B,CAAD,CAAX;AAEAf,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,YAAY,CAACL,WAAD,CAAZ;AACAC,IAAAA,mBAAmB;AACpB,GAHQ,EAGN,CAACD,WAAD,EAAcC,mBAAd,CAHM,CAAT;AAKA,SAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWU,QAAX,CAAP;AACD,CATD;;AAWA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCd,IAAAA,WAAW,EAAED,SAAS,CAACgB,IAAV,CAAeC,UADI;AAEhCf,IAAAA,mBAAmB,EAAEF,SAAS,CAACgB,IAAV,CAAeC,UAFJ;AAGhCC,IAAAA,KAAK,EAAEH,KAAK,CAACG;AAHmB,GAAL;AAAA,CAA7B;;AAMA,eAAenB,OAAO,CAACe,eAAD,EAAkB;AAAEb,EAAAA,WAAW,EAAXA,WAAF;AAAeC,EAAAA,mBAAmB,EAAnBA;AAAf,CAAlB,CAAP,CACbS,IADa,CAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { Fragment, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { setUserData } from \"../redux/actions/UserActions\";\nimport { getNavigationByUser } from \"../redux/actions/NavigationAction\";\nimport jwtAuthService from \"../services/jwtAuthService\";\nimport localStorageService from \"../services/localStorageService\";\n// import firebaseAuthService from \"../services/firebase/firebaseAuthService\";\nimport history from \"history.js\";\n\nconst checkJwtAuth = async setUserData => {\n  // You need to send token to your server to check token is valid\n  // modify loginWithToken method in jwtService\n  let user = await jwtAuthService.loginWithToken();\n  if (user) setUserData(user);\n  else\n    history.push({\n      pathname: \"/session/signin\"\n    });\n  return user;\n};\n\n// const checkFirebaseAuth = () => {\n//   firebaseAuthService.checkAuthStatus(user => {\n//     if (user) {\n//       console.log(user.uid);\n//       console.log(user.email);\n//       console.log(user.emailVerified);\n//     } else {\n//       console.log(\"not logged in\");\n//     }\n//   });\n// };\n\nconst Auth = ({ children, setUserData, getNavigationByUser }) => {\n  setUserData(localStorageService.getItem(\"auth_user\"));\n\n  useEffect(() => {\n    checkJwtAuth(setUserData);\n    getNavigationByUser();\n  }, [setUserData, getNavigationByUser]);\n\n  return <Fragment>{children}</Fragment>;\n};\n\nconst mapStateToProps = state => ({\n  setUserData: PropTypes.func.isRequired,\n  getNavigationByUser: PropTypes.func.isRequired,\n  login: state.login\n});\n\nexport default connect(mapStateToProps, { setUserData, getNavigationByUser })(\n  Auth\n);\n"]},"metadata":{},"sourceType":"module"}